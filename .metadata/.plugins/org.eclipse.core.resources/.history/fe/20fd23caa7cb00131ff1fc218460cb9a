
public class HeapRS {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}
	

	 public static void sort(Comparable[] pq) {
	        int N = pq.length;
	        for (int k = N/2; k >= 1; k--)
	            sink(pq, k, N);
	        while (N > 1) {
	            exch(pq, 1, N--);
	            sink(pq, 1, N);
	        }
	    }
	 	
	    // sink for maxheap, For k child at 2k+1 and 2K+2 
	    private static void sink(int[] arr, int k, int heapsize) {
	        while (2*k+1 < heapsize) {
	            int left = 2*k+1;
	            int right = left+1;
	            if (right < heapsize ){
	            	if(left < right)
	            		exch(arr, k, right);
	            	else 
	            		exch(arr, k, left);
	            }else if (left < heapsize && ) {
	            	    exch(arr, k, left);
	            	
	            }
	            if (j < heapsize && arr[j]< arr[j+1])) j++;
	            if ((arr[k] > arr[j])) break;
	            exch(arr, k, j);
	            k = j;
	        }
	    }
	    
	    private static void exch(int[] arr, int i, int j) {
	        int swap = arr[i];
	        arr[i] = arr[j];
	        arr[j] = swap;
	    }

}
