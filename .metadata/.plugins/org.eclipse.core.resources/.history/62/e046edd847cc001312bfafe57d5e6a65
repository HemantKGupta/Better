
public class UniqueRowInBooleanMatrix {

	public static void main(String[] args) {

	}
	
	// Inserts a new matrix row to Trie.  If row is already
	// present, then returns 0, otherwise insets the row and
	// return 1
	public boolean insert( TrieNode root, int (*M)[COL], int row, int col )
	{
	    // base case
	    if ( root == NULL )
	        root = new TrieNode();
	 
	    // Recur if there are more entries in this row
	    if ( col < COL )
	        return insert ( &( (*root)->child[ M[row][col] ] ), M, row, col+1 );
	 
	    else // If all entries of this row are processed
	    {
	        // unique row found, return 1
	        if ( !( (*root)->isEndOfCol ) )
	            return (*root)->isEndOfCol = 1;
	 
	        // duplicate row found, return 0
	        return 0;
	    }
	}
	
	

}

class TrieNode{
	boolean isEnd;
	TrieNode[] child;
	
	
	
	public TrieNode() {
		
		
		this.child = new TrieNode[2];
	}
	
	
}
