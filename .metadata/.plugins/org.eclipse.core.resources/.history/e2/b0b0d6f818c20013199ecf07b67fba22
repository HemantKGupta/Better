import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;


public class GenomicRangeQuery2 {
	
	public static Map<Character,Integer> map;
	
	static{		
		map = new HashMap<Character,Integer>();
		map.put('A', 1);
		map.put('C', 2);
		map.put('G', 3);
		map.put('T', 4);
	}

	public static void main(String[] args) {
		String S = "GACACCATA";
		int[] P = {0, 0, 4, 7 };
		int[] Q = {8, 2, 5, 7 };
		System.out.println(Arrays.toString(solution(S, P, Q)));
	}
	
	public static int[] solution(String S, int[] P, int[] Q) {
		int n = S.length();
		S = S.replace('A', '1');
		S = S.replace('C', '2');
		S = S.replace('G', '3');
		S = S.replace('T', '4');
		//int val = Integer.parseInt(S);
		//System.out.println(val);
		//char [] copy = S.toCharArray();
		System.out.println(Arrays.toString(copy));
		
		
		int [] prefixSum = new int[n+1];
		prefixSum[0]=0;
		for (int i = 1; i < n; i++){ 
			prefixSum[i] = prefixSum[i-1]+getIntegerFromMap(S.charAt(i));
			
		}
		/*
		System.out.println(Arrays.toString(prefixSum));
		int M = P.length;
		int[] result = new int[M];
		for (int i = 0; i < M; i++) {
			result[i] = findMin(prefixMin,P[i],Q[i]);
		}*/
		return new int[2];

	}

	public static int getIntegerFromMap(char charAt) {
	  
		return 0;
	}

}
