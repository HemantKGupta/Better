import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;


public class BuildTreeInPost {

	public static void main(String[] args) {
		int[] in =   {4, 2, 5, 1, 6, 7, 3, 8};
		int[] post = {4, 5, 2, 6, 7, 8, 3, 1};
		buildTreeFromInPost(in,post);
	

	}
	public static void buildTreeFromInPost(int[] in, int[] post){
		int inLength = in.length;		
		BNode root = null;
		buildTree(root, in, post, 0, inLength-1, 0,post.length -1 );
		printInorder(root);
		
	}
	
	public static void buildTree(BNode root, int[] in, int[] post, int inStart, int inEnd, int postStart,int postEnd){
		
		int rootData = post[postEnd];
		System.out.println("rootData is : "+ rootData);
		root = new BNode(rootData);
		if (inStart == inEnd){
			return;
		}
		System.out.println("Searching "+rootData + " in in array range from "+inStart +" to "+inEnd);
		int i = -1;
		for (i=inStart; i<=inEnd;i++ ){
			if(in[i]==rootData)
				break;
		}
		
		int rootIndexIn = i;
		System.out.println("rootIndexIn "+rootIndexIn);
		
		buildTree(root.left, in, post, inStart, rootIndexIn-1,inStart,rootIndexIn-1 );
		buildTree(root.right, in, post, rootIndexIn+1, inEnd,rootIndexIn,postEnd-1 );
	}
	
	public static void printInorder(BNode node) {
		if (node == null)
			return;

		printInorder(node.left);
		System.out.format("%d ", node.data);
		printInorder(node.right);
	}

}
