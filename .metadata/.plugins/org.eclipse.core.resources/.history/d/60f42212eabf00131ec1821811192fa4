
public class WidthOfTree {

	public static void main(String[] args) {

	}
	
	
	
	public static void widthOfTree(BNode root){
		 int h = height(root);
		 int[] widthOfLevel = new int[h+1]; 
		 for (int i = 1; i <= h; i++){
			 System.out.println("\nThe level "+ i+ " is : ");
			 widthOfLevel[i]+= widthOfGivenLevel(root, i);
		 }
	}
	

	/* Print nodes at a given level */
	private static int widthOfGivenLevel(BNode root, int level) {
		if (root == null)
			return 0;
		if (level == 1)
			return 1;
		else if (level > 1) {
			widthOfGivenLevel(root.left, level - 1, width);
			widthOfGivenLevel(root.right, level - 1, width);
		}
	}
	
	/* Function to calculate height of a tree */
	public static int height(BNode root) {

		if (root == null) {
			return 0;
		}
		int lheight = height(root.left);
		int rheight = height(root.right);
		if (lheight > rheight) {
			return lheight + 1;
		} else
			return rheight + 1;
	}

}
