import java.util.ArrayDeque;
import java.util.Deque;
import java.util.Stack;


public class Sigma2012 {

	public static void main(String[] args) {
		int[] H = {8,8,5,7,9,8,7,4,8};
	}
	
	 public static int solution2(int[] H) {
		 int len = H.length;
		 int min = H[0];
		 int result = 0;
		 for (int i = 1; i < H.length; i++) {
			 int val = H[i];
			 if (val < min){
				 min = val;
			 }
		 }
		 if (min != 0){
			 for (int i = 0; i < H.length; i++) {
					H[i]= H[i]-min;
			  }
			 result++;
		 }
		 int zeroIndex=0;
		 for (int i = 0; i < H.length; i++) {
			 int val = H[i];
			 if (val == 0){
				 zeroIndex = i;
				 break;
			 }
		  }
		
		 
		 
		 
	  
		 return 0; 
	 }
	 
	 public int solution(int[] H) {
		 Deque<Integer> stack = new ArrayDeque<Integer>();
		 int blocks = 0;
		 int level = 0;
		 for (int i:H){
		 if (i>level){
		 stack.push(new Integer(level));
		 blocks++;
		 level = i;
		 }
		 if (ii){
		 stack.pop();
		 }
		 level = i;
		 if (stack.peek() != level){
		 stack.push(new Integer(level));
		 blocks++;
		 }
		 }
		 }
		 return blocks;
		 }

}
