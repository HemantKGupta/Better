
public class RotateList {

	public static void main(String[] args) {
		
	}
	
	// This function rotates a linked list counter-clockwise and updates the head.
	// The function assumes that k is smaller than size of linked list. It doesn't
	// modify the list if k is greater than or equal to size
	void rotate (Node head_ref, int k)
	{
	     if (k == 0)
	       return;
	 
	   Node current = head_ref;
	 
	    // current will either point to kth or null after this loop.
	    int count = 1;
	    while (count < k && current != null)
	    {
	        current = current.next;
	        count++;
	    }
	 
	    if (current == null)
	        return;
	 
	    
	    Node kthNode = current;
	 
	    
	    while (current.next != null)
	        current = current.next;
	 
	    current.next = head_ref;
	 
	    // Change head to (k+1)th node
	    head_ref = kthNode.next;
	 
	    // change next of kth node to null
	    kthNode.next = null;
	}

}
