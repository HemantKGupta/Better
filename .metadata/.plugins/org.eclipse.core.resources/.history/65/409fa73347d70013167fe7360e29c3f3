
public class DetectCycleUndirected {

	public static void main(String[] args) {
		
		marked = new boolean[G.V()];
	}
	
	private static  boolean[] marked;
	
	public static void dfs(Graph G, int u, int v) {
        marked[v] = true;
        for (int w : G.adj(v)) {

            if (!marked[w]) {
                edgeTo[w] = v;
                dfs(G, v, w);
            }

            // check for cycle (but disregard reverse of edge leading to v)
            else if (w != u) {
               cycle=true;
            }
        }
    }


}
