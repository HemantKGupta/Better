
public class InsertSortedCircularList {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}
	
	/* function to insert a new_node in a list in sorted way.
	   Note that this function expects a pointer to head node
	   as this can modify the head of the input linked list */
	public static void sortedInsert(Node head_ref, Node new_node)
	{
	 Node current = head_ref;
	 
	  // Case 1 of the above algo
	  if (current == null)
	  {
	     new_node.next = new_node;
	     head_ref = new_node;
	  }
	 
	  // Case 2 of the above algo
	  else if (current.data >= new_node.data)
	  {
	    /* If value is smaller than head's value then
	      we need to change next of last node */
	    while(current.next != *head_ref)
	        current = current.next;
	    current.next = new_node;
	    new_node.next = *head_ref;
	    *head_ref = new_node;
	  }
	 
	  // Case 3 of the above algo
	  else
	  {
	    /* Locate the node before the point of insertion */
	    while (current.next!= *head_ref && current.next.data < new_node.data)
	      current = current.next;
	 
	    new_node.next = current.next;
	    current.next = new_node;
	  }
	}

}
