public class ReverseEveryKNodes {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

	/*
	 * Reverses the linked list in groups of size k and returns the pointer to
	 * the new head node.
	 */
	public static Node reverse(Node head, int k) {
		Node current = head;
		Node next = null;
		Node prev = null;
		int count = 0;

		/* reverse first k nodes of the linked list */
		while (current != null && count < k) {
			next = current.next;
			current.next = prev;
			prev = current;
			current = next;
			count++;
		}

		/*
		 * next is now a pointer to (k+1)th node Recursively call for the list
		 * starting from current. And make rest of the list as next of first
		 * node
		 */
		if (next != null) {
			head.next = reverse(next, k);
		}

		/* prev is new head of the input list */
		return prev;
	}

}
