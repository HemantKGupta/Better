
public class KthSmallestinSorted2D {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}
	public static void swap(HeapNode one, HeapNode other){
		HeapNode temp = one;
		one = other;
		other = temp; 
	}
	
	
	public static void minHeapify(HeapNode harr[], int i, int heap_size)
	{
	    int l = i*2 + 1;
	    int r = i*2 + 2;
	    int smallest = i;
	    if (l < heap_size && harr[l].val < harr[i].val)
	        smallest = l;
	    if (r < heap_size && harr[r].val < harr[smallest].val)
	        smallest = r;
	    if (smallest != i)
	    {
	        swap(harr[i], harr[smallest]);
	        minHeapify(harr, smallest, heap_size);
	    }
	}
	 
	// A utility function to convert harr[] to a max heap
	void buildHeap(HeapNode harr[], int n)
	{
	    int i = (n - 1)/2;
	    while (i >= 0)
	    {
	        minHeapify(harr, i, n);
	        i--;
	    }
	}

}

class HeapNode {
    int val;  // value to be stored
    int r;    // Row number of value in 2D array
    int c;    // Column number of value in 2D array
}
